this question is under kunal kushwaha cycle sorting

class Solution {


    public int missingNumber(int[] arr) { // cycle sorting for missing element in array
        int i =0;
        while(i < arr.length){
            int index = arr[i];
            if(arr[i] >= arr.length || arr[i] ==i){
                i++;
            }else{
                int temp = arr[index];
                arr[index] = arr[i];
                arr[i]= temp;
            }
        }

        for(int k =0;k < arr.length;k++){
            if(arr[k] != k){
                return k;
            }
        }
        return arr.length;
    }
    
    public static int missingNumberXor(int[] nums){
        int xor =0;
        for(int i =1;i <= nums.length;i++){
            xor ^= i;
        }
        for(int num: nums){
            xor ^= num;
        }
        return xor;
    }

    public static int sort(int[] arr){ //using first sorting and than using index to find the missing number
        boolean swapped;
        for(int i =0 ;i < arr.length -1;i++){
            swapped= false;
            for(int j =1 ;j < arr.length - i;j++){
                if(arr[j] < arr[j-1]){
                    int temp = arr[j];
                    arr[j]= arr[j-1];
                    arr[j-1] = temp;
                    swapped = true;
                }
                
            }
            if(!swapped){
                break;
            }
        }
        for(int i = 0;i < arr.length ;i++){
            if(arr[i] != i){
                return i;
            }
        }
        return arr.length;
    }

    public static int findMissingElement(int[] arr){ //using sum of numbers
        int n = arr.length;
        int expectedsum = (n+1) *n /2;
        int actualsum = 0;
        for(int num : arr){
            actualsum += num;
        }
        return expectedsum - actualsum;
    }

    public static int hashSet(int[] arr){
        HashSet<Integer> set = new HashSet<>();
        for(int num : arr){
            set.add(num);
        }

        for(int i =0;i <= arr.length;i++){
            if(!set.contains(i)){
                return i;
            }
        }
        return -1;
    }
}

